services:
  ngrok:
    image: ngrok/ngrok:latest
    networks:
      - fin_bot_network
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
  
  bot:
    build: .
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=psql_db_fin
      - REDIS_HOST=redis_tg_fin_bot_db
    ports:
      - '8001:8001'
    cpus: '0.5'
    # depends_on:
    #   - ngrok
    command: sh -c 'python main.py'
    networks:
      - fin_bot_network
    logging:
      driver: "json-file"
      options:
          max-size: "20m"

  redis_tg_fin_bot_db:
    image: redis:latest
    restart: on-failure
    networks:
      - fin_bot_network
    cpus: '0.5'
    ports:
      - 6379:6379
    env_file:
      - ./.env
    command: redis-server --requirepass ${REDIS_PASSWORD} --save "" --appendonly no
    # sh -c "echo 1 > /proc/sys/vm/overcommit_memory && redis-server --save 900 1 --loglevel warning"
    volumes:
      - redis_tg_bot_data_fin:/data
    logging:
      driver: "json-file"
      options:
          max-size: "20m"

  # arq_high:
  #   build: .
  #   env_file:
  #     - ./.env
  #   environment:
  #     - POSTGRES_HOST=psql_db
  #     - REDIS_HOST=redis_tg_bot_db
  #     # - DB_PORT=5432

  #   networks:
  #     - bot_network
  #   command: arq background.high_worker.WorkerSettings
  #   depends_on:
  #     - redis_tg_bot_db

  arq_low:
    build: .
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=psql_db_fin
      # - DB_PORT=5432
      - REDIS_HOST=redis_tg_fin_bot_db
    networks:
      - fin_bot_network
    cpus: '1'
    command: arq background.low_worker.WorkerSettings
    depends_on:
      - redis_tg_fin_bot_db

  # arq_popular:
  #   build: .
  #   env_file:
  #     - ./.env
  #   environment:
  #     - POSTGRES_HOST=psql_db
  #     # - DB_PORT=5432
  #     - REDIS_HOST=redis_tg_bot_db
  #   networks:
  #     - bot_network
  #   command: arq background.popular_worker.WorkerSettings
  #   depends_on:
  #     - redis_tg_bot_db

  psql_db_fin:
    image: postgres:14
    # restart: always
    networks:
      - fin_bot_network
    ports:
      - '5445:5432'
    env_file:
      - ./.env
    environment:
      - TZ=Europe/Moscow
    cpus: '1.0'
    mem_limit: 1g
    volumes:
      - postgres-data_fin:/var/lib/postgresql/data
    # command: postgres -c max_connections=200 -c shared_buffers=2GB
    # command: postgres -c max_connections=100 -c shared_buffers=2GB -c work_mem=16MB -c maintenance_work_mem=512MB -c effective_cache_size=6GB
    logging:
      driver: "json-file"

  # redis_tg_bot_db:
  #   image: redis:alpine
  #   restart: on-failure
  #   networks:
  #     - redis_network
  #   # ports:
  #   #   - 6379:6379
  #   env_file:
  #     - ./.env
  #   command: redis-server --requirepass ${REDIS_PASSWORD} --save "10" "1" --appendonly no
  #   # sh -c "echo 1 > /proc/sys/vm/overcommit_memory && redis-server --save 900 1 --loglevel warning"
  #   volumes:
  #     - redis_tg_bot_data:/data
  #   logging:
  #     driver: "json-file"
  #     options:
  #         max-size: "20m"

networks:
  fin_bot_network:

volumes:
  postgres-data_fin:
  redis_tg_bot_data_fin: